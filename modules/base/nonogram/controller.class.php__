<?php

	if(!defined("__FLOWER__")) exit();

	class nonogram_controller extends nonogram{
		protected $pdo;
		
		function getCellItem($row, $mapsize, $pixel){
			$tmp = 0;
			$cnt = 0;
			$txt = "";
				
			$lastItem = ($column + 1) + (($mapsize - 1) * $mapsize);
				
			for ($row = 1; $row < ($mapsize+1); $row++) {
				$item = ($column + 1) + (($row - 1) * $mapsize);
				if($tmp == 0 && in_array($item, $pixel)){
					$cnt = 1;
					$tmp = 1;
				}elseif($tmp == 1 && !in_array($item, $pixel)){
					$txt .= empty($txt) ? $cnt : ",".$cnt;
					$cnt = 0;
					$tmp = 0;
				}elseif($tmp == 1 && in_array($item, $pixel)) {
					$cnt++;
				}
			}
			
			if($tmp==1 && in_array($lastItem, $pixel)) {
				$txt .= empty($txt) ? $cnt : ",".$cnt;
			}elseif(in_array($lastItem, $pixel)){
				$cnt = 1;
				$txt .= empty($txt) ? $cnt : ",".$cnt;
			}
			
			if(empty($txt)) $txt = "-1";
		}
		
		function getCellData($mapsize, $pixel){
			for ($column = 0; $column < ($mapsize); $column++) {
				$txt = $this->getCellItem($row, $mapsize, $pixel);
				$data .= empty($data) ? $txt : "/".$txt;
			}
			
			return $data;
		}
		
		function getRowItem($row, $mapsize, $pixel){
			$tmp = 0;
			$cnt = 0;
			$txt = "";
				
			$lastItem = ($mapsize * $row) + $mapsize + 1;
			
			for ($column = ($mapsize * $row)+1; $column < $lastItem; $column++) {
				if($tmp == 0 && in_array($column, $pixel)){
					$cnt = 1;
					$tmp = 1;
				}elseif($tmp == 1 && !in_array($column, $pixel)) {
					$txt .= empty($txt) ? $cnt : ",".$cnt;
					$cnt = 0;
					$tmp = 0;
				}elseif($tmp == 1 && in_array($column, $pixel)) {
					$cnt++;
				}
			}
			
			if($tmp==1 && in_array($lastItem, $pixel)) {
				$txt .= empty($txt) ? $cnt : ",".$cnt;
			}elseif(in_array($lastItem, $pixel)){
				$cnt = 1;
				$txt .= empty($txt) ? $cnt : ",".$cnt;
			}
			
			if(empty($txt)) $txt = "-1";
		}
		
		function getRowData($mapsize, $pixel){
			for ($row = 0; $row < ($mapsize); $row++) {
				$txt = $this->getRowItem($row, $mapsize, $pixel);
				
				$data .= empty($data) ? $txt : "/".$txt;
			}
			
			return $data;
		}
		
		function procPointPixel(){
			$gameID = $this->base->post_params("gameID");
			$pixel = $this->base->post_params("pixel");
			
			if($_SESSION[$gameID]['failed'] > 4){
				return $this->base->response("type", "gameover");
			}
			
			if(count($_SESSION[$gameID]['checked']) == count($_SESSION[$gameID])){
				return $this->base->response("type", "gameend", 'count', count($_SESSION[$gameID]));
			}
			
			if(isset($_SESSION[$gameID])){
				if(in_array($pixel, $_SESSION[$gameID])){
					if(!isset($_SESSION[$gameID]['checked'])){
						$_SESSION[$gameID]['checked'] = array();
					}
					
					if(!in_array($pixel, $_SESSION[$gameID]['checked'])){
						array_push($_SESSION[$gameID]['checked'],$pixel);
					}
					
					return $this->base->response("type", "success", "pixel", $pixel, 'on', count($_SESSION[$gameID]['checked']), 'on2', count($_SESSION[$gameID]));
				}else{
					if(!isset($_SESSION[$gameID]['failed'])){
						$_SESSION[$gameID]['failed'] = 1;
					}else{
						$_SESSION[$gameID]['failed'] = ($_SESSION[$gameID]['failed']) + 1;
					}
					
					return $this->base->response("type", "failed", "pixel", $pixel, 'count',$_SESSION[$gameID]['failed']);
				}
			}
		}
		
		function procNewGame()
		{
			if ( ! session_id() ) @ session_start();
			
			$px = array("1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,56,57,59,60,61,62,64,65,71,72,74,75,76,77,79,80,86,87,89,90,91,92,94,95,101,102,104,105,106,107,109,110,111,112,113,114,115,116,117,119,120,121,122,134,135,136,137,140,149,150,151,152,154,155,156,164,165,166,167,170,179,180,181,182,194,195,196,197,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225", "1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,91,105,106,107,119,120,121,122,123,133,134,135,136,137,138,139,147,148,149,150,151,152,153,163,164,165,166,167,168,178,179,180,181,182,188,194,195,196,197,202,203,204,209,210,211,215,216,217,218,219,220,221,225", "5,21,36,37,38,52,53,54,67,68,69,81,82,83,84,95,96,97,98,109,110,111,112,113,124,125,126,127,128,129,139,140,141,142,143,144,145,155,156,157,158,159,160,161,170,171,172,173,174,175,176,177,186,187,188,189,190,191,192,193,202,204,205,207,208,209,217,219", "3,4,5,17,18,19,20,21,32,33,34,36,47,48,51,63,65,66,69,70,71,80,83,84,87,94,95,97,98,99,100,101,103,109,110,111,112,113,114,115,116,117,119,124,125,126,127,128,129,130,131,132,133,134,140,141,143,144,145,146,148,157,159,160,161,162,173,174,175,177,178,189,193,202,203,204,205,206,207,208,216,217,219","6,7,9,10,20,21,22,23,24,25,26,35,36,37,38,39,40,41,50,51,52,53,54,55,56,62,63,64,66,67,68,69,70,72,73,74,76,77,78,79,80,82,83,84,86,87,88,89,90,91,92,93,94,95,96,98,100,101,102,103,104,105,107,108,109,110,111,112,114,115,116,117,118,119,121,122,123,124,125,126,128,130,131,132,133,134,135,136,137,138,139,140,143,146,147,148,149,150,152,153,154,158,162,163,164,172,173,186,187,198,199,200,201,213,214",",3,5,6,9,10,15,18,19,20,21,22,24,25,26,33,35,36,40,41,56,57,61,62,65,66,67,68,71,72,76,77,78,79,80,81,83,84,85,86,93,94,95,96,97,99,100,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,146,151,152,155,156,157,158,160,161,162,176,177,179,181,183,184,190,191,194,195,196,197,198,199,200,204,205,206,209,211,213,214,219,220",",10,11,12,13,24,25,26,27,28,29,38,39,40,41,43,44,45,53,54,55,56,57,58,59,69,70,71,72,73,85,86,87,99,100,101,102,103,106,112,113,114,115,116,117,118,119,121,122,123,126,127,128,132,133,134,136,137,138,139,140,141,142,144,145,146,148,149,152,153,154,155,156,158,159,160,161,163,164,167,168,169,170,171,172,173,174,177,178,183,184,185,186,187,188,189,190,191,192,200,201,203,204,205,217,218,219,220,221,222",",5,6,7,16,17,18,19,20,21,22,23,34,36,37,38,39,43,44,49,50,51,53,54,57,58,59,60,64,65,67,68,69,70,72,75,79,81,82,83,84,85,90,95,96,97,98,99,100,101,103,104,105,108,109,111,112,113,114,115,116,117,118,119,122,126,127,129,130,131,132,133,134,135,137,140,141,144,145,146,147,148,149,150,152,153,155,160,161,163,164,168,170,171,176,177,179,180,186,192,195,205,206,207,209,210,219,220,223,224",",13,14,15,21,22,23,24,27,28,30,34,35,36,39,42,44,46,47,48,50,53,54,57,61,62,68,72,73,77,78,79,80,83,84,88,89,95,96,99,100,104,105,111,115,116,117,120,126,127,132,133,135,139,140,141,142,148,149,150,154,156,159,160,164,165,171,174,179,187,189,194,201,202,203,204,205,208,209,214,215,216,218,219,221,222,223");
			
			$arrayKey = array_rand($px,1);
			$pixel = explode(",",$px[$arrayKey]);
			
			$session = bin2hex(random_bytes(5));
			$_SESSION[$session] = $pixel;
			
			$mapsize = 15;
			$rowData = $this->getRowData($mapsize, $pixel);
			$cellData = $this->getCellData($mapsize, $pixel);
			
			return $this->base->response("type", "success", "row", $rowData, "column", $cellData, 'gameID', $session);
		}
		
		function init($args)
		{
			$this->base = new base();
			$this->pdo = $this->base->getPDO();

			$this->api_key = "";
				
			$this->nonogram = new stdClass;
			$this->nonogram->module = $args->module;
			$this->nonogram->model = new nonogram_Model($this);
			
			return $this->nonogram;
		}

	}
?>